public T_ID
class T_ID
MostRepeatedWord T_ID
{ T_{
public T_ID
static T_ID
void T_ID
main T_ID
( T_(
String T_ID
[ T_[
] T_]
args T_ID
) T_)
throws T_ID
Exception T_ID
{ T_{
String T_ID
line T_ID
, T_,
word T_ID
= T_=
"" T_STRINGLITERAL
; T_;
int T_ID
count T_ID
= T_=
0 T_INTEGERLITERAL
, T_,
maxCount T_ID
= T_=
0 T_INTEGERLITERAL
; T_;
ArrayList T_ID
< T_<
String T_ID
> T_>
words T_ID
= T_=
new T_ID
ArrayList T_ID
< T_<
String T_ID
> T_>
( T_(
) T_)
; T_;
/ T_/
/ T_/
Opens T_ID
file T_ID
in T_ID
read T_ID
mode T_ID
FileReader T_ID
file T_ID
= T_=
new T_ID
FileReader T_ID
( T_(
"data.txt " T_STRINGLITERAL
) T_)
; T_;
BufferedReader T_ID
br T_ID
= T_=
new T_ID
BufferedReader T_ID
( T_(
file T_ID
) T_)
; T_;
/ T_/
/ T_/
Reads T_ID
each T_ID
line T_ID
while T_ID
( T_(
( T_(
line T_ID
= T_=
br T_ID
. T_.
readLine T_ID
( T_(
) T_)
) T_)
!= T_!=
null T_ID
) T_)
{ T_{
String T_ID
string T_ID
[ T_[
] T_]
= T_=
line T_ID
. T_.
toLowerCase T_ID
( T_(
) T_)
. T_.
split T_ID
( T_(
"([,.\\s]+) " T_STRINGLITERAL
) T_)
; T_;
/ T_/
/ T_/
Adding T_ID
all T_ID
words T_ID
generated T_ID
in T_ID
previous T_ID
step T_ID
into T_ID
words T_ID
for T_ID
( T_(
String T_ID
s T_ID
: T_:
string T_ID
) T_)
{ T_{
words T_ID
. T_.
add T_ID
( T_(
s T_ID
) T_)
; T_;
} T_}
} T_}
/ T_/
/ T_/
Determine T_ID
the T_ID
most T_ID
repeated T_ID
word T_ID
in T_ID
a T_ID
file T_ID
for T_ID
( T_(
int T_ID
i T_ID
= T_=
0 T_INTEGERLITERAL
; T_;
i T_ID
< T_<
words T_ID
. T_.
size T_ID
( T_(
) T_)
; T_;
i T_ID
+ T_+
+ T_+
) T_)
{ T_{
count T_ID
= T_=
1 T_INTEGERLITERAL
; T_;
/ T_/
/ T_/
Count T_ID
each T_ID
word T_ID
in T_ID
the T_ID
file T_ID
and T_ID
store T_ID
it T_ID
in T_ID
variable T_ID
count T_ID
for T_ID
( T_(
int T_ID
j T_ID
= T_=
i T_ID
+ T_+
1 T_INTEGERLITERAL
; T_;
j T_ID
< T_<
words T_ID
. T_.
size T_ID
( T_(
) T_)
; T_;
j T_ID
+ T_+
+ T_+
) T_)
{ T_{
if T_ID
( T_(
words T_ID
. T_.
get T_ID
( T_(
i T_ID
) T_)
. T_.
equals T_ID
( T_(
words T_ID
. T_.
get T_ID
( T_(
j T_ID
) T_)
) T_)
) T_)
{ T_{
count T_ID
+ T_+
+ T_+
; T_;
} T_}
} T_}
/ T_/
/ T_/
If T_ID
maxCount T_ID
is T_ID
less T_ID
than T_ID
count T_ID
then T_ID
store T_ID
value T_ID
of T_ID
count T_ID
in T_ID
maxCount T_ID
/ T_/
/ T_/
and T_ID
corresponding T_ID
word T_ID
to T_ID
variable T_ID
word T_ID
if T_ID
( T_(
count T_ID
> T_>
maxCount T_ID
) T_)
{ T_{
maxCount T_ID
= T_=
count T_ID
; T_;
word T_ID
= T_=
words T_ID
. T_.
get T_ID
( T_(
i T_ID
) T_)
; T_;
} T_}
} T_}
System T_ID
. T_.
out T_ID
. T_.
println T_ID
( T_(
"Most repeated word: " T_STRINGLITERAL
+ T_+
word T_ID
) T_)
; T_;
br T_ID
. T_.
close T_ID
( T_(
) T_)
; T_;
} T_}
} T_}
